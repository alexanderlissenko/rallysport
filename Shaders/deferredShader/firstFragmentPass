#version 420

precision mediump float;
uniform sampler2D firstTexture;
in vec3 fragmentNormal;
in vec2 fragmentTexCoord;
in vec4 positionOut;       // The model coordinate, as given by the vertex shader
out vec4 diffuseOutput; // layout(location = 0)
out vec4 posOutput;     // layout(location = 1)
out vec4 normOutput;    // layout(location = 2)
//out vec4 blendOutput;   // layout(location = 3)
void main(void)
{
   posOutput = positionOut;   // Position given by the vertext shader
   normOutput = vec4(normalize(fragmentNormal), 0);
   vec4 clr = texture(firstTexture, fragmentTexCoord);

   
   //float alpha = clr.a;
   //if (alpha < 0.1)
   //    discard;   // Optimization that will not change the depth buffer
   //blendOutput.rgb = clr.rgb * clr.a; // Pre multiplied alpha
   //blendOutput.a = clr.a;
   
   diffuseOutput = clr;
}